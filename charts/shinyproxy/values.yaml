## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []

## @section Common parameters

## @param nameOverride String to partially override nginx.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override nginx.fullname template
##
fullnameOverride: ""
## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param clusterDomain Kubernetes Cluster Domain
##
clusterDomain: cluster.local
## @param extraDeploy Extra objects to deploy (value evaluated as a template)
##
extraDeploy: []
## @param commonLabels Add labels to all the deployed resources
##
commonLabels: {}
## @param commonAnnotations Add annotations to all the deployed resources
##
commonAnnotations: {}

## @section ShinyProxy parameters

## Bitnami ShinyProxy image version
## ref: https://hub.docker.com/r/bitnami/nginx/tags/
## @param image.registry ShinyProxy image registry
## @param image.repository ShinyProxy image repository
## @param image.tag ShinyProxy image tag (immutable tags are recommended)
## @param image.pullPolicy ShinyProxy image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Set to true if you would like to see extra information on logs
##
image:
  registry: docker.io
  repository: dabbleofdevops/shinyproxy
  tag: 2.6.0

  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## E.g.:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Set to true if you would like to see extra information on logs
  ##
  debug: false
## @param hostAliases Deployment pod host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## Command and args for running the container (set to default if not set). Use array form
## @param command Override default container command (useful when using custom images)
## @param args Override default container args (useful when using custom images)
##
command: []
args: []
## @param extraEnvVars Extra environment variables to be set on ShinyProxy containers
## E.g:
## extraEnvVars:
##   - name: FOO
##     value: BAR
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap with extra environment variables
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret with extra environment variables
##
extraEnvVarsSecret: ""

## @section ShinyProxy deployment parameters

## @param replicaCount Number of ShinyProxy replicas to deploy
##
replicaCount: 1
## @param podLabels Additional labels for ShinyProxy pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for ShinyProxy pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and  nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
## @param tolerations Tolerations for pod assignment. Evaluated as a template.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: {}
## @param priorityClassName Priority class name
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
##
priorityClassName: ""
## ShinyProxy pods' Security Context.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled ShinyProxy pods' Security Context
## @param podSecurityContext.fsGroup Set ShinyProxy pod's Security Context fsGroup
## @param podSecurityContext.sysctls sysctl settings of the ShinyProxy pods
##
podSecurityContext:
  enabled: false
  fsGroup: 1001
  ## sysctl settings
  ## Example:
  ## sysctls:
  ## - name: net.core.somaxconn
  ##   value: "10000"
  ##
  sysctls: []
## ShinyProxy containers' Security Context.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
## @param containerSecurityContext.enabled Enabled ShinyProxy containers' Security Context
## @param containerSecurityContext.runAsUser Set ShinyProxy container's Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set ShinyProxy container's Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: false
  runAsUser: 1001
  runAsNonRoot: true
## Configures the ports ShinyProxy listens on
## @param containerPorts.http Sets http port inside ShinyProxy container
## @param containerPorts.https Sets https port inside ShinyProxy container
##
containerPorts:
  http: 8080
  https: ""
## ShinyProxy containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##
resources:
  requests:
    ## @param resources.requests.cpu The requested resources for the ShinyProxy container
    cpu: 200m
    ## @param resources.requests.memory The requested resources for the ShinyProxy container
    memory: 512Mi
  limits:
    ## @param resources.limits.cpu The requested resources for the ShinyProxy container
    cpu: 300m
    ## @param resources.limits.memory The requested resources for the ShinyProxy container
    memory: 800Mi

## ShinyProxy containers' liveness probe.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 5
  periodSeconds: 10
  failureThreshold: 6
  successThreshold: 1
## ShinyProxy containers' readiness probe.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  timeoutSeconds: 3
  periodSeconds: 5
  failureThreshold: 3
  successThreshold: 1

## @param customLivenessProbe Override default liveness probe
##
customLivenessProbe: {}
## @param customReadinessProbe Override default readiness probe
##
customReadinessProbe: {}
## Autoscaling parameters
## @param autoscaling.enabled Enable autoscaling for ShinyProxy deployment
## @param autoscaling.minReplicas Minimum number of replicas to scale back
## @param autoscaling.maxReplicas Maximum number of replicas to scale out
## @param autoscaling.targetCPU Target CPU utilization percentage
## @param autoscaling.targetMemory Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: ""
  maxReplicas: ""
  targetCPU: ""
  targetMemory: ""
## @param extraVolumes Array to add extra volumes
##
extraVolumes: []
## @param extraVolumeMounts Array to add extra mount
##
extraVolumeMounts: []
## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for nginx pod
  ##
  create: false
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the `common.names.fullname` template
  name: ""
  ## @param serviceAccount.annotations Annotations for service account. Evaluated as a template.
  ## Only used if `create` is `true`.
  ##
  annotations: {}
  ## @param serviceAccount.autoMount Auto-mount the service account token in the pod
  ##
  autoMount: false
## @param sidecars Sidecar parameters
## e.g:
## sidecars:
##   - name: your-image-name
##     image: your-image
##     imagePullPolicy: Always
##     ports:
##       - name: portname
##         containerPort: 1234
##
sidecars: []

## @param sidecarSingleProcessNamespace Enable sharing the process namespace with sidecars
## This will switch pod.spec.shareProcessNamespace parameter
##
sidecarSingleProcessNamespace: false

## @param initContainers Extra init containers
##
initContainers: []
## Pod Disruption Budget configuration
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
##
pdb:
  ## @param pdb.create Created a PodDisruptionBudget
  ##
  create: false
  ## @param pdb.minAvailable Min number of pods that must still be available after the eviction
  ##
  minAvailable: 1
  ## @param pdb.maxUnavailable Max number of pods that can be unavailable after the eviction
  ##
  maxUnavailable: 0

## @section ShinyProxy clusterissuer parameters to enable letsEncrypt

# Must have cert manager installed in order to set this to true
clusterIssuer:
  ## @param clusterIssuer.enabled  create a clusterissuer let's encrypt secret
  ##
  enabled: false
  ## @param clusterIssuer.email email to add to letsEncrypt
  email: ""

## @section ShinyProxy AppPod Application Pod Parameters
## ShinyProxy configuration
## ref: https://www.shinyproxy.io/documentation/configuration
## appPod sets the default resources. Each of these can be overridden in the specs.*.container-memory-request

appPod:
  resources:
    requests:
      ## @param appPod.resources.requests.cpu Resources requests for spawned pods
      cpu: 200m
      ## @param appPod.resources.requests.memory Resources requests for spawned pods
      memory: 100Mi
    limits:
      ## @param appPod.resources.limits.cpu Resources requests for spawned pods
      cpu: 300m
      ## @param appPod.resources.limits.memory Resources requests for spawned pods
      memory: 200Mi

## @section ShinyProxy Proxy Authentication
## ref: https://www.shinyproxy.io/documentation/configuration/#authentication
## Authentication parameters for ShinyProxy

## @section ShinyProxy Proxy Simple Username/Password Authentication
## ref: https://www.shinyproxy.io/documentation/configuration/#simple-authentication
## Please note that this is not a secure way to authenticate your application. It is only here to provide a starting point.
## Since passwords are contained in clear text in the application.yml file, this is not a secure way to set up authentication, but can be useful for demonstration purposes (e.g. in the absence of a network connection) or for very specific use cases.
## **Note**
## the user name of the authenticated user is made available to the Shiny application via the environment variable SHINYPROXY_USERNAME;
## the groups the authenticated user is member of are made available to the Shiny application via the environment variable SHINYPROXY_USERGROUPS. The group names are converted into capital letters (e.g. MATHEMATICIANS)

## @param authYamlEnabled Optionally, pass in the parameters to authYaml as a Yaml string. This is mostly here to get around the AWS Marketplace limit of only having 15 overrides.
authYamlEnabled: false
## @param authYaml Optionally, pass in the parameters to authYaml as a Yaml string. This is mostly here to get around the AWS Marketplace limit of only having 15 overrides. These values will be merged with the helm chart auth values.
authYaml: ""

auth:
  ## @param auth.authSimpleEnabled
  authSimpleEnabled: true
  users:
    ## @param auth.users[0].name
  - name: user01
    ## @param auth.users[0].password Please note that you should absolutely change this password
    password: "password123"
    ## @param auth.users[0].groups User Groups
    groups: scientists, users

  ## @section ShinyProxy Proxy Public / No Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/

  ## @param auth.authNoneEnabled Default is no authentication, public app
  authNoneEnabled: false

  ## @section ShinyProxy Proxy LDAP Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#ldap
  ## When using LDAP authentication, ShinyProxy will use the provided LDAP url to:
  ## Authenticate users by attempting to bind with their login name and password.
  ## Authorize users to access apps by searching for any LDAP groups they are a member of, and matching those group names to the list of group names configured for the app.
  ## With the default values (authentication: ldap), authentication will be done against the LDAP server at ldap.forumsys.com; to log in one can use the user name “tesla” and password “password”.
  ## The base DN given in the url (e.g. dc=example,dc=com in ldap://ldap.forumsys.com:389/dc=example,dc=com) does not have to be repeated in user-search-base or group-search-base. However, it must be repeated in the manager-dn.
  ## user-dn-pattern and user-search-filter support the placeholder {0} which will be replaced with the user’s login name.
  ## group-search-filter supports three placeholders: {0} maps to the user’s DN, {1} maps to the user’s login name, and {2} maps to the user’s CN.

  ## @param auth.authLDAPEnabled Use LDAP Authentication
  authLDAPEnabled: false
  ldap:
      ## @param auth.ldap.url the LDAP connection string, composed of the URL and base DN of the LDAP directory
      url: ""
      ## @param auth.ldap.user-dn-pattern pattern of the distinguished name for a user. Use this if all your users are in a single LDAP location
      user-dn-pattern: ""
      ## @param auth.ldap.user-search-filter LDAP filter to search for users. Use this if your users are in different LDAP locations, and you cannot use user-dn-pattern
      user-search-filter: ""
      ## @param auth.ldap.user-search-base search base to search for users. Only used if user-search-filter is set
      user-search-base: ""
      ## @param auth.ldap.group-search-filter LDAP filter used to search for group memberships
      group-search-filter: ""
      ## @param auth.ldap.group-search-base search base to search for groups. Only used if group-search-filter is set
      group-search-base: ""
      ## @param auth.ldap.manager-dn the distinguished name of the user used to bind to the LDAP directory; leave empty if the initial bind is anonymous
      manager-dn: ""
      ## @param auth.ldap.manager-password the password of the user used to bind to the LDAP directory; can be omitted if manager-dn is empty (i.e. when the initial bind is anonymous).
      manager-password: ""

  ## @section ShinyProxy Proxy Kerberos Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#kerberos
  ## A second type of authentication is Kerberos based authentication which offers single-sign on top of the authentication and authorization.
  ## Kerberos-based authentication can be configured using

  ## @param auth.authKerberosEnabled
  authKerberosEnabled: false
  kerberos:
    ## @param auth.kerberos.auth-service-principal principal name of the Kerberos entity that processes authentication requests;
    auth-service-principal: ""
    ## @param auth.kerberos.auth-service-keytab path to the keytab file containing the secret of the auth-service-principal;
    auth-service-keytab: ""
    ## @param auth.kerberos.deleg-service-principal principal name of the Kerberos entity that obtains delegated service tickets for the user; if not specified the value of the auth-service-principal will be used also for the deleg-service-principal;
    deleg-service-principal: ""
    ## @param auth.kerberos.deleg-service-keytab path to the keytab file containing the secret of the deleg-service-principal; if not specified the value of the auth-service-keytab is used as the deleg-service-keytab;
    deleg-service-keytab: ""
    ## @param auth.kerberos.backend-principals array of service principals for which delegated service tickets should be obtained e.g. ["HTTP/your-api-server.com", "postgres/your-postgres-server.com"]
    backend-principals: ""
    ## @param auth.kerberos.client-ccache-path absolute or relative path to a folder where user-specific credential caches are maintained; these are mounted automatically as volumes in the container, and contain service tickets for the configured backend-principals;
    client-ccache-path: ""
    ## @param auth.kerberos.ticket-renew-interval interval in milliseconds for automatically renewing the backend service tickets; the default is 28800000 which corresponds to 8 hours.
    ticket-renew-interval: ""


  ## @section ShinyProxy Proxy Single-Sign On / Keycloak Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#single-sign-on--keycloak

  ## @param auth.authKeyCloakEnabled Enable KeyCloak/SSO
  authKeyCloakEnabled: false

  keycloak:
    ## @param auth.keycloak.realm
    realm: yoursso
    ## @param auth.keycloak.auth-server-url
    auth-server-url: http://yoururl.com:8180/auth
    ## @param auth.keycloak.resource
    resource: yourresource
    ## @param auth.keycloak.credentials-secret
    credentials-secret: your-credentials-secret
    ## @param auth.keycloak.ssl-required one can set the SSL/HTTPS mode to one of none, all or external (default). These options are documented here;
    ssl-required: "none"
    ## @param auth.keycloak.name-attribute name of the attribute to use as the user’s name; one of name (default, current behaviour), preferred_username, nickname or email
    name-attribute: ""
    ## @param auth.keycloak.use-resource-role-mappings boolean value to use either client roles (true) or realm roles (false; default); see also the relevant Keycloak documentation.
    use-resource-role-mappings: false


  ## @section ShinyProxy Proxy OpenID Connect (OIDC) Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#openid-connect-oidc
  ## OpenID Connect is a modern authentication protocol based on the OAuth2 standard. It uses tokens, removing the need to store passwords and offering a single-sign-on experience for desktop, web and mobile apps.
  ## More information about OIDC can be found on the OpenID website.
  ## To configure OIDC in ShinyProxy, several steps must be performed:
  ## Register your ShinyProxy installation with an OIDC provider.
  ## Obtain the configuration parameters for your OIDC provider that ShinyProxy requires.
  ## (Optional) For group-based authorization, add a custom claim in the OIDC ID Token.

  ## @param auth.authOpenIDEnabled Enable OIDC authentication. Default is false
  authOpenIDEnabled: false

  openid:
    ## @param auth.openid.auth-url
    auth-url: https://accounts.google.com/o/oauth2/v2/auth
    ## @param auth.openid.token-url
    token-url: https://www.googleapis.com/oauth2/v4/token
    ## @param auth.openid.jwks-url
    jwks-url: https://www.googleapis.com/oauth2/v3/certs
    ## @param auth.openid.logout-url URL to be used for logging out of the OpenId session on the OpenId provider back-end; for an Auth0 back-end one can specify e.g.
    logout-url: ""
    ## @param auth.openid.client-id
    client-id: "***"
    ## @param auth.openid.client-secret
    client-secret: "***"

  ## @section ShinyProxy Proxy SAML 2.0 Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#saml-20
  ## ShinyProxy supports authentication and authorization using an IDP (Identity Provider) conforming to the SAML 2.0 specification.

  ## @param auth.authSAMLEnabled Enable SAML Auth
  authSAMLEnabled: false

  saml:
    ## @param auth.saml.idp-metadata-url the URL where the IDP’s metadata can be retrieved
    idp-metadata-url: ""
    ## @param auth.saml.app-entity-id the entity ID of this application, must match the AudienceRestriction in the SAML assertion received from the IDP
    app-entity-id: ""
    ## @param auth.saml.app-base-url the application’s base URL. Some IDPs require that you specify valid callback URLs. This must match a valid callback URL.
    app-base-url: ""
    ## @param auth.saml.name-attribute the name of the attribute in the SAML assertion containing the username
    name-attribute: ""
    ## @param auth.saml.roles-attribute the name of the attribute in the SAML assertion containing the user roles
    roles-attribute: ""
    ## @param auth.saml.logout-url optional URL to which the user will be redirected when they logout
    logout-url: ""
    ## @param auth.saml.logout-method can be local (default) or saml. See below for more information.
    logout-method: ""
    ## @param auth.saml.log-attributes when set to true, ShinyProxy logs all SAML attributes provided by the IDP when a user logs in. This makes it easier to find the correct attribute to use for the name-attribute and roles-attribute configuration. Note that this may log sensitive information (e.g., some SAML claims may contain passwords or tokens), therefore this option should only be used when setting up SAML (or you have to ensure no sensitive values are contained within the SAML assertion).
    log-attributes: ""
    ## @param auth.saml.max-authentication-age configures the maximum age of SAML credentials in seconds. By default, this is 7200 seconds (i.e. 2 hours). See this FAQ entry for more information and an alternative solution.
    max-authentication-age: ""
    ## @param auth.saml.force-authn if set to true the IDP is required to re-authenticate the user and not rely on previous authentication events. This is useful when the IDP provides ShinyProxy credentials which are older than the time configured in the max-authentication-age. See this FAQ entry for more information and an alternative solution.
    force-authn: ""
    ## @param auth.saml.keystore
    keystore: path to the JKS keystore
    ## @param auth.saml.keystore-password (If the IDP sends back encrypted SAML assertions) Password to access the keystore. If omitted, encryption-cert-password will be used instead
    keystore-password: ""
    ## @param auth.saml.encryption-cert-name (If the IDP sends back encrypted SAML assertions) Name of the certificate whose public key the SAML Assertion is encrypted with
    encryption-cert-name: ""
    ## @param auth.saml.encryption-cert-password (If the IDP sends back encrypted SAML assertions) Password of the certificate whose public key the SAML Assertion is encrypted with
    encryption-cert-password: ""

  ## @section ShinyProxy Proxy Social Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#social-authentication
  ## A sixth type of authentication offered by ShinyProxy besides LDAP, Kerberos, Keycloak, OpenID Connect and SAML 2.0 is so-called social authentication. This type of authentication allows users to log in with
  ## *Facebook
  ## *Twitter
  ## *Google
  ## *Github or
  ## *Linkedin
  ## accounts into ShinyProxy.

  ## @param auth.authSocialEnabled Enable Social Auth
  authSocialEnabled: false

  social:
    ## @param auth.social.facebookEnabled
    facebookEnabled: false
    facebook:
      ## @param auth.social.facebook.app-id
      app-id: yourfacebookappid
      ## @param auth.social.facebook.app-secret
      app-secret: yourfacebookappsecret
    ## @param auth.social.twitterEnabled
    twitterEnabled: false
    twitter:
      ## @param auth.social.twitter.app-id
      app-id: yourtwitterappid
      ## @param auth.social.twitter.app-secret
      app-secret: yourtwitterappsecret
    ## @param auth.social.googleEnabled
    googleEnabled: false
    google:
      ## @param auth.social.google.app-id
      app-id: yourgoogleappid
      ## @param auth.social.google.app-secret
      app-secret: yourgoogleappsecret
    ## @param auth.social.githubEnabled
    githubEnabled: false
    github:
      ## @param auth.social.github.app-id
      app-id: yourgithubappid
      ## @param auth.social.github.app-secret
      app-secret: yourgithubappsecret
    ## @param auth.social.linkedinEnabled
    linkedinEnabled: false
    linkedin:
      ## @param auth.social.linkedin.app-id
      app-id: yourlinkedinappid
      ## @param auth.social.linkedin.app-secret
      app-secret: yourlinkedinappsecret

  ## @section ShinyProxy Proxy WebService Authentication
  ## ref: https://www.shinyproxy.io/documentation/configuration/#web-service-based-authentication
  ## Amongst the different authentication methods, ShinyProxy also offers the possibility to use a custom web service that handles authentication with a HTTP POST call returning a session id and user information.
  ## The `authentication-request-body`` is a customizable JSON body that gets POSTed to the `authentication-url``.
  ## If the HTTP response code is 200, the authentication is considered successful while all other response codes result in an authentication error. Since no authorization is offered by this type of web services, authorization logic is not implemented and authenticated users will be able to access all public applications.

  ## @param auth.authWebServiceEnabled
  authWebServiceEnabled: false

  webservice:
    ## @param auth.webservice.authentication-url
    authentication-url: https://your-auth-server.com/login
    ## @param auth.webservice.authentication-request-body
    authentication-request-body: '{"username": "%s", "password": "%s"}'

## @section ShinyProxy Proxy application parameters
## ShinyProxy Kubernetes configuration
## ref: https://www.shinyproxy.io/documentation/configuration/#general
## ref: https://www.shinyproxy.io/documentation/configuration/#kubernetes
# The first block of configuration in the application.yml file concerns general configuration values for the ShinyProxy application:

proxy:
  ## @param proxy.title The title that is displayed in the ShinyProxy navigation bar;
  title: Open Analytics Shiny Proxy
  ## @param proxy.logo-url The url of the logo that is displayed in the ShinyProxy navigation bar; this can also be a local file using the file scheme (file://)
  logo-url: https://github.com/dabble-of-devops-bioanalyze/biohub-info/raw/master/logos/BioHub_v1_logo_only-01.png
  ## @param proxy.landing-page The URL to send a user to after login; default value is / which will redirect the user to a list of the Shiny apps. Other typical values are /app/<app-name> or /app_direct/<app-name> which allows to immediately land on a (single) Shiny app;
  landing-page: /
  ## @param proxy.heartbeat-rate The user’s browser will sent a heartbeat call every heartbeat-rate milliseconds; default value is 10000 (10 seconds);
  heartbeat-rate: 10000
  ## @param proxy.heartbeat-timeout If the server does not receive a heartbeat for heartbeat-timeout milliseconds, the relevant proxy will be released (and the container stopped); default value is 60000 (60 seconds). Apps can override this using the heartbeat-timeout property.
  heartbeat-timeout: 60000
  ## @param proxy.authentication Authentication see the ShinyProxy [docs](https://www.shinyproxy.io/documentation/configuration/#authentication)
  authentication: none
  ## @param proxy.container-log-path ShinyProxy can be configured to store log files of running containers. These log files contain the stdout and stderr output of the R process running the Shiny app.
  container-log-path: ./container-logs
  ## @param proxy.container-wait-time timeout for the container to be available to ShinyProxy; defaults to 20s (20000)
  container-wait-time: 600000
  ## @param proxy.container-backend This is a helm chart so we're using Kubernetes
  container-backend: kubernetes
  kubernetes:
    ## @param proxy.kubernetes.internal-networking
    internal-networking: true
  ## @param proxy.specs See the [specs](https://www.shinyproxy.io/documentation/configuration/#apps) docs.
  specs: []


## @section Traffic Exposure parameters

## ShinyProxy Service properties
##
service:
  ## @param service.type Service type
  ##
  type: LoadBalancer
  ## @param service.port Service HTTP port
  ##
  port: 80
  ## @param service.httpsPort Service HTTPS port
  ##
  httpsPort: 443
  ## @param service.nodePorts [object] Specify the nodePort(s) value(s) for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePorts:
    http: ""
    https: ""
  ## @param service.targetPort [object] Target port reference value for the Loadbalancer service types can be specified explicitly.
  ## Listeners for the Loadbalancer can be custom mapped to the http or https service.
  ## Example: Mapping the https listener to targetPort http [http: https]
  ##
  targetPort:
    http: http
    https: https
  ## @param service.loadBalancerIP LoadBalancer service IP address
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  loadBalancerIP: ""
  ## @param service.annotations Service annotations
  ## This can be used to set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ## This can be used to set the external dns variables
  ## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md#verify-externaldns-works-service-example
  ## Example:
  ## annotations:
  ##  external-dns.alpha.kubernetes.io/hostname: nginx.external-dns-test.my-org.com
  ##
  annotations: {}
  ## @param service.externalTrafficPolicy Enable client source IP preservation
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

## @section Ingress parameters

## Configure the ingress resource that allows you to access the
## Nginx installation. Set up the URL
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: false
  ## DEPRECATED: Use ingress.annotations instead of ingress.certManager
  ## certManager: false
  ##

  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress resource
  ##
  hostname: nginx.local
  ## @param ingress.path The Path to Nginx. You may need to set this to '/*' in order to use this with ALB ingress controllers.
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Create TLS Secret
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.ingress.hostname }}
  ## You can use the ingress.secrets parameter to create this TLS secret or relay on cert-manager to create it
  ##
  tls: false
  ## @param ingress.extraHosts The list of additional hostnames to be covered with this ingress record.
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## extraHosts:
  ## - name: nginx.local
  ##   path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
  ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## extraTls:
  ## - hosts:
  ##     - nginx.local
  ##   secretName: nginx.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or
  ## -----BEGIN RSA PRIVATE KEY-----
  ##
  ## name should line up with a tlsSecret set further up
  ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
  ##
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## - name: nginx.local-tls
  ##   key:
  ##   certificate:
  ##
  secrets: []
## Health Ingress parameters
##
healthIngress:
  ## @param healthIngress.enabled Set to true to enable health ingress record generation
  ##
  enabled: false
  ## DEPRECATED: Use ingress.annotations instead of ingress.certManager
  ## certManager: false
  ##

  ## @param healthIngress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param healthIngress.hostname When the health ingress is enabled, a host pointing to this will be created
  ##
  hostname: example.local
  ## @param healthIngress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ##
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param healthIngress.tls Enable TLS configuration for the hostname defined at `healthIngress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: {{- printf "%s-tls" .Values.healthIngress.hostname }}
  ## You can use the healthIngress.secrets parameter to create this TLS secret, relay on cert-manager to create it, or
  ## let the chart create self-signed certificates for you
  ##
  tls: false
  ## @param healthIngress.extraHosts The list of additional hostnames to be covered with this health ingress record
  ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
  ## E.g.
  ## extraHosts:
  ##   - name: example.local
  ##     path: /
  ##
  extraHosts: []
  ## @param healthIngress.extraTls TLS configuration for additional hostnames to be covered
  ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## E.g.
  ## extraTls:
  ##   - hosts:
  ##       - example.local
  ##     secretName: example.local-tls
  ##
  extraTls: []
  ## @param healthIngress.secrets TLS Secret configuration
  ## If you're providing your own certificates, please use this to add the certificates as secrets
  ## key and certificate should start with -----BEGIN CERTIFICATE----- or -----BEGIN RSA PRIVATE KEY-----
  ## name should line up with a secretName set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create the secret for you
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ##
  ## E.g.
  ## secrets:
  ##   - name: example.local-tls
  ##     key:
  ##     certificate:
  ##
  secrets: []

# TODO Add Prometheus Exporter
# https://github.com/bitnami/charts/blob/master/bitnami/nginx/values.yaml#L748