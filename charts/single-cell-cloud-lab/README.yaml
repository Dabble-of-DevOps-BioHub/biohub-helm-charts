---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: BioAnalyze - Single Cell Cloud Lab Helm Chart

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Dabble of DevOps, SCorp"
    url: "https://www.dabbleofdevops.com"
    year: "2022"

# Canonical GitHub repo
github_repo: dabble-of-devops-bioanalyze/helm-charts

# Badges to display
badges:
  # - name: "Latest Release"
  #   image: "https://img.shields.io/github/release/dabble-of-devops-bioanalyze/helm-charts.svg"
  #   url: "https://github.com/dabble-of-devops-bioanalyze/helm-charts/releases/latest"

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "BioAnalyze Help Desk"
    description: "Home of the docs and help for the BioAnalyze Project."
    url: "https://dabbleofdevopshelp.zendesk.com/"
  - name: "BioAnalyze"
    description: "BioAnalyze Website and Newsletter"
    url: "https://www.bioanalyze.io"
  - name: "Dabble of DevOps Consulting"
    description: "Want to hire me to design your HPC infrastructure?"
    url: "https://www.dabbleofdevops.com"
  - name: "terraform-aws-eks-cluster"
    url: "https://github.com/cloudposse/terraform-aws-eks-cluster/"
    description: Base CloudPosse module for AWS EKS Clusters"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: ShinyProxy
    url: https://www.shinyproxy.io/
    description: |
      ShinyProxy is your favourite way to deploy Shiny apps in an enterprise context. It has built-in functionality for LDAP authentication and authorization, makes securing Shiny traffic (over TLS) a breeze and has no limits on concurrent usage of a Shiny app.
  - name: ShinyProxy Flask Demo
    url: https://github.com/openanalytics/shinyproxy-flask-demo
    description: "Example flask app with gunicorn"
  - name: IAM Policy Creation
    url: https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/create-policy.html#examples
    description: AWS Docs for IAM Creation
  - name: EKSctl IAM service account example
    url: https://github.com/weaveworks/eksctl/blob/main/examples/13-iamserviceaccounts.yaml
    description: Create your cluster with IAM policies attached.

# Short description of this project
description: |-
  This is a helm chart for the awesome [ShinyProxy](https://www.shinyproxy.io/) configured for a Single Cell Data Visualization Application.

  ShinyProxy adds Authentication and Load Balancing to RShiny, Dash and Flask Apps.

  ## Parameters

  ## Credits and Thanks

  Open source software is not built in a vacuum!

  [ShinyProxy](https://www.shinyproxy.io/) backs this helm chart. It's a great piece of software to add authentication and load balancing to any RShiny, Dash, or Flask web application.
  [Zero to ShinyProxy](https://github.com/remche/zero-to-shinyproxy) is another ShinyProxy helm chart that this chart uses as a base.
  [CloudPosse](https://github.com/cloudposse) is a devops accelerator that has tons of great recipes and build tools that all devs should take advantage.

# Introduction to the project
introduction: |-

  - Cloud Native - View your Single Cell data stored on S3 in a browser.
  - Authentication - enabled through [ShinyProxy](https://www.shinyproxy.io/documentation/configuration/) in the hosted version.
  - Load Balancing - We're doing data science over here. We don't want big computers hanging out burning money when we're not even using them.
  - Open source - Nothing is hidden behind a paywall.
  - Self hosted using the DIY approach with the Helm Charts
  - Hosted option with the AWS Marketplace (Coming Soon!).

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  ## ✨ Quick Start Self Hosted with `Helm`

  > Install the Helm Chart

    ```bash
    helm repo add bitnami https://charts.bitnami.com/bitnami
    helm repo add bioanalyze https://dabble-of-devops-bioanalyze.github.io/helm-charts/
    helm repo update
    helm upgrade --install \
      my-awesome-app \
      bioanalyze/shinyproxy \
      --values path-to-my/values.yaml
    ```

  ## ✨ Quick Start  - AWS Marketplace

  Coming Soon!


# Example usage
examples: |-

  ## Access data in S3

  *Please note that this will give read and write access to an S3 Bucket and should only used in trusted environments.*

  In order to access data in S3 you need to create an IAM role policy and associate it with a K8s service account.

  [Full Docs](https://docs.aws.amazon.com/eks/latest/userguide/create-service-account-iam-policy-and-role.html)

  Change the value from `MY-S3-BUCKET` to your bucket.

  ```json
  {
      "Version": "2012-10-17",
      "Statement": [
          {
              "Sid": "ListObjectsInBucket",
              "Effect": "Allow",
              "Action": ["s3:ListBucket"],
              "Resource": ["arn:aws:s3:::MY-S3-BUCKET"]
          },
          {
              "Sid": "AllObjectActions",
              "Effect": "Allow",
              "Action": "s3:*Object",
              "Resource": ["arn:aws:s3:::MY-S3-BUCKET/*"]
          }
      ]
  }
  ```

  Save this to `MY-S3-BUCKET-rw-policy.json`

  ```
  aws iam create-policy \
    --policy-name MY-S3-BUCKET-rw-policy \
    --policy-document MY-S3-BUCKET-rw-policy.json
  ````

  The ARN should come up when you create the role, but if you miss it you can search for it.

  ```
  aws iam list-policies | jq -r '.Policies[] | select(.PolicyName|match("MY-S3-BUCKET-rw-policy")) | .Arn'
  ```

  Then create the K8s service account using `eksctl`

  ```
  eksctl create iamserviceaccount \
      --name MY-S3-BUCKET-rw \
      --namespace default \
      --region MY-REGION \
      --cluster MY-CLUSTER \
      --attach-policy-arn ABOVE-ARN \
      --approve \
      --override-existing-serviceaccounts
  ```

# How to get started quickly
quickstart: |-
  The `Makefile` is always the source of truth in any BioAnalyze project.

    ```
    helm repo add bitnami https://charts.bitnami.com/bitnami
    helm repo add bioanalyze https://dabble-of-devops-bioanalyze.github.io/helm-charts/
    helm repo update
    helm upgrade --install \
      my-awesome-app \
      bioanalyze/shinyproxy \
      --values path-to-my/values.yaml
    ```

# Other files to include in this README from the project folder
# include:
#   - "docs/targets.md"
#   - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Jillian Rowe"
    github: "jerowe"
