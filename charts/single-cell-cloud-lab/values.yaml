## @section ShinyProxy Proxy application parameters
## ShinyProxy Kubernetes configuration
## ref: https://www.shinyproxy.io/documentation/configuration/#kubernetes

shinyproxy:
  ingress:
    ## @param shinyproxy.ingress.enabled enable an ingress
    enabled: false
    ## @param shinyproxy.ingress.annotations annotations to add - usually for nginx ingress and/or external-dns
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # cert-manager.io/cluster-issuer: bigomics-playground-auth-letsencrypt
    # hosts:
    # - app.bioanalyzedev.io
    # tls:
    # - hosts:
    #   - app.bioanalyzedev.io
    #   secretName: bioanalyzedev-auth.local-tls
  proxy:
    ## @param shinyproxy.proxy.service.type LoadBalancer or ClusterIP
    service:
      type: LoadBalancer
    kubernetes:
      ## @param shinyproxy.proxy.kubernetes.podWaitTime how long to wait for the pod to spin up
      podWaitTime: 600000

    resources:
      requests:
        ## @param shinyproxy.proxy.resources.requests.cpu shinyproxy proxy cpu request
        cpu: 1
        ## @param shinyproxy.proxy.resources.requests.memory shinyproxy proxy memory request
        memory: 512Mi
      limits:
        ## @param shinyproxy.proxy.resources.limits.cpu shinyproxy proxy memory request
        cpu: 8
        ## @param shinyproxy.proxy.resources.limits.memory shinyproxy proxy memory request
        memory: 5G

    image:
      ## @param shinyproxy.proxy.image.repository Shiny Proxy docker image repo
      repository: dabbleofdevops/shinyproxy
      ## @param shinyproxy.proxy.image.tag Shiny Proxy docker image tag
      # tag: 2.6.0
      tag: 503883c

    ## @param shinyproxy.proxy.title The title that is displayed in the ShinyProxy navigation bar;
    title: "BioAnalyze - Single Cell Cloud Lab"
    ## @param shinyproxy.proxy.logoUrl The url of the logo that is displayed in the ShinyProxy navigation bar; this can also be a local file using the file scheme (file://)
    logoUrl: https://github.com/dabble-of-devops-bioanalyze/biohub-info/raw/master/logos/BioHub_v1_logo_only-01.png
    ## @param shinyproxy.proxy.landingPage the URL to send a user to after login; default value is / which will redirect the user to a list of the Shiny apps. Other typical values are /app/<app-name> or /app_direct/<app-name> which allows to immediately land on a (single) Shiny app;
    landingPage: /app/single-cell-cloud-lab/
    specs:
      ## @param shinyproxy.proxy.specs[0].id application id
    - id: single-cell-cloud-lab
      ## @param shinyproxy.proxy.specs[0].port port the internal application is running on
      port: 5005
      ## @param shinyproxy.proxy.specs[0].displayName Name displayed on the landing page
      displayName: "Single Cell Cloud Lab"
      ## @param shinyproxy.proxy.specs[0].containerImage Docker image
      containerImage: dabbleofdevops/k8s-single-cell-cloud-lab:v0.25.0
      ## @param shinyproxy.proxy.specs[0].containerWaitTime
      containerWaitTime: 600000
      ## @param shinyproxy.proxy.specs[0].heartbeatEnabled
      heartbeatEnabled: true
      ## @param shinyproxy.proxy.specs[0].heartbeatTimeout
      heartbeatTimeout: 600000
      ## @param shinyproxy.proxy.specs[0].containerMemoryRequest
      containerMemoryRequest: 2G
      ## @param shinyproxy.proxy.specs[0].containerMemoryLimit
      containerMemoryLimit: 10G
      ## @param shinyproxy.proxy.specs[0].containerCpuRequest
      containerCpuRequest: 1
      ## @param shinyproxy.proxy.specs[0].containerCpuLimit
      containerCpuLimit: 8
      ## @param shinyproxy.proxy.specs[0].serviceAccount The service account used to access the S3 buckets. Please see the docs for more details.
      serviceAccount: s3-read-write-cellxgene-example-bucket
      ## @param shinyproxy.proxy.specs[0].targetPath
      targetPath: "#{proxy.getRuntimeValue('SHINYPROXY_PUBLIC_PATH')}"
      containerEnv:
        # Must specify one of CELLXGENE_BUCKET or CELLXGENE_DATA
        # if you are using an s3 bucket you must have the credentials
        # cannot have s3:// prefix
        ## @param shinyproxy.proxy.specs[0].containerEnv.BUCKET S3 Bucket to load data from
        BUCKET: "my-s3-bucket"
        ## @param shinyproxy.proxy.specs[0].containerEnv.SCRIPT_NAME SCRIPT_NAME env var to pass to gunicorn for correct proxy
        SCRIPT_NAME: "#{proxy.getRuntimeValue('SHINYPROXY_PUBLIC_PATH').replaceFirst('/$','')}"
        ## @param shinyproxy.proxy.specs[0].containerEnv.SYNC_ENABLED Sync local cellxgene results to the S3 Bucket
        SYNC_ENABLED: "True"
        ## @param shinyproxy.proxy.specs[0].containerEnv.PUBLIC Let ShinyProxy take care of the Auth
        PUBLIC: "True"

      ## @param shinyproxy.proxy.specs[0].kubernetesPodPatches Add some file mounts and env vars
      kubernetesPodPatches: |-
        - op: add
          path: /spec/containers/0/env/-
          value:
              name: PROXY_ID
              value: "#{proxy.id}"

        - op: add
          path: /spec/containers/0/env/-
          value:
              name: PROXY_USERID
              value: "#{proxy.userId}"

        # in case the app has no volumes yet:
        - op: add
          path: /spec/volumes
          value:
            - name: cache-volume
              emptyDir: {}

        - op: add
          path: /spec/containers/0/volumeMounts
          value:
            - mountPath: /cache
              name: cache-volume
